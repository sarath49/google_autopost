<?php

/**
 * @file
 * Google+ Autopost module file.
 */

/**
 * Implements hook_init().
 */
function google_autopost_init() {
  $path = libraries_get_path('google-api-php-client');
  if ($path) {
    set_include_path($path."/src/" . PATH_SEPARATOR . get_include_path());
  }
}

/**
 * Implements hook_libraries_info().
 */
function google_autopost_libraries_info() {
  $path = libraries_get_path('google-api-php-client');
  set_include_path($path."/src/" . PATH_SEPARATOR . get_include_path());
  $libraries['google-api-php-client'] = array(
    'name' => 'Google OAuth2 Library',
    'vendor url' => 'https://github.com/google/google-api-php-client',
    'download url' => 'https://github.com/google/google-api-php-client/tree/1.1.5',
    'version arguments' => array(
      'file' => 'src/Google/Client.php',
      'pattern' => '/LIBVER = "([0-9\.a-z]+)/',
      'lines' => 40,
    ),
    'versions' => array(
      '1.0.5-beta' => array(
        'files' => array(
          'php' => array(
            'src/Google/Client.php',
          )
        ),
      ),
      '1.1.5' => array(
        'files' => array(
          'php' => array(
            'src/Google/autoload.php',
          )
        )
      )
    ),
    'files' => array(
      'php' => array(
        'src/Google/Client.php',
      ),
    ),
  );
  return $libraries;
}


/**
 * Implements hook_menu().
 */
function google_autopost_menu() {
  return array(
    
    // OAuth Page Callback.
    variable_get('google_autopost_callback_uri', 'google-autopost/oauth') => array(
      'title' => 'Google OAuth',
      'access callback' => TRUE,
      'page callback' => 'drupal_get_form',
      'page arguments' => array('google_autopost_oauth_callback'),
      'type' => MENU_CALLBACK,
      'file' => 'google_autopost.pages.inc',
      'file path' => drupal_get_path('module', 'google_autopost') . '/includes/',
    ),
    
    'admin/config/services/google-autopost' => array(
      'title' => 'Google+ Autopost',
      'description' => 'Google+ Autopost configuration.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('google_autopost_settings'),
      'access arguments' => array('google autopost administer'),
      'file' => 'google_autopost.pages.inc',
      'file path' => drupal_get_path('module', 'google_autopost') . '/includes/',
    ),
    
    'admin/config/services/google-autopost/default' => array(
      'title' => 'Settings',
      'type' => MENU_DEFAULT_LOCAL_TASK,
    ),
    
    'admin/config/services/google-autopost/auth' => array(
      'title' => 'Google+ Auth',
      'description'=> 'Google+ authentication page.',
      'type' => MENU_LOCAL_TASK,
      'page callback'=> 'drupal_get_form',
      'page arguments' => array('google_autopost_auth_form'),
      'access arguments' => array('google autopost administer'),
      'file' => 'google_autopost.pages.inc',
      'file path' => drupal_get_path('module', 'google_autopost') . '/includes/',
    ), 
  );
}

/**
 * Implements hook_permission().
 */
function google_autopost_permission() {
  return array(
    'google autopost administer' => array(
      'title' => t('Administer Google+ Autopost Configuration.'),
    ),
  );
}

/**
 * Implements hook_node_insert().
 */
function google_autopost_node_insert($node) {
  $token = variable_get('google_autopost_token', NULL);
  if (isset($token)){
    $info = libraries_load('google-api-php-client');
    if (!$info['loaded']) {
      drupal_set_message(t("Can't authenticate with google as library is missing check Status report or Readme for requirements"), 'error');
    }
    else {
      $client = new Google_Client();
      $client->setAuthConfigFile(drupal_get_path('module', 'google_autopost') . '/client_secret.json');
      $client->setClientId('134841409062-jgr7f5oti1sm208k5t9np9pkfklfeiht.apps.googleusercontent.com');
      $client->setClientSecret('_PmfdVnxT6JcMQrkHsBMTMPJ');
      $client->setRedirectUri('http://localhost:8081/gp/google/oauth');
      $client->addScope(
        array(
          Google_Service_PlusDomains::PLUS_ME, 
          Google_Service_PlusDomains::PLUS_STREAM_WRITE
         )
        );
      $client->setAccessType("offline");
    
    } 
  }
  else {
    drupal_set_message(t('Google+ Autopost configured.'), 'error');
  }
}
